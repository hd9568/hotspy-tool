digraph "CFG for '_QFPread_raw_data' function" {
	label="CFG for '_QFPread_raw_data' function";

	Node0x55bb5fea1040 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{3:\l|  %4 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, align 8\l  %5 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, align 8\l  %6 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, align 8\l  %7 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, align 8\l  %8 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, align 8\l  %9 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, i64 1, align\l... 8\l  %10 = alloca \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, i64 1,\l... align 8\l  %11 = alloca i32, i64 1, align 4\l  %12 = load i32, ptr @_QFFread_raw_dataEopened, align 4\l  %13 = icmp ne i32 %12, 0\l  %14 = xor i1 %13, true\l  br i1 %14, label %15, label %40\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea1040:s0 -> Node0x55bb5fea15b0[tooltip="3 -> 15\nProbability 50.00%" ];
	Node0x55bb5fea1040:s1 -> Node0x55bb5fea1600[tooltip="3 -> 40\nProbability 50.00%" ];
	Node0x55bb5fea15b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{15:\l|  %16 = call ptr @_FortranAioBeginOpenUnit(i32 7, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1629)\l  %17 = call i1 @_FortranAioSetFile(ptr %16, ptr\l... @_QQclX70757A7A6C65732E747874, i64 11)\l  %18 = call i32 @_FortranAioEndIoStatement(ptr %16)\l  store i32 1, ptr @_QFFread_raw_dataEopened, align 4\l  br label %19\l}"];
	Node0x55bb5fea15b0 -> Node0x55bb5fea3840[tooltip="15 -> 19\nProbability 100.00%" ];
	Node0x55bb5fea3840 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{19:\l|  %20 = phi i32 [ %35, %23 ], [ 1, %15 ]\l  %21 = phi i64 [ %36, %23 ], [ 27, %15 ]\l  %22 = icmp sgt i64 %21, 0\l  br i1 %22, label %23, label %37\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea3840:s0 -> Node0x55bb5fea3900[tooltip="19 -> 23\nProbability 96.88%" ];
	Node0x55bb5fea3840:s1 -> Node0x55bb5fea3b00[tooltip="19 -> 37\nProbability 3.12%" ];
	Node0x55bb5fea3900 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{23:\l|  store i32 %20, ptr %11, align 4\l  %24 = call ptr @_FortranAioBeginExternalFormattedInput(ptr\l... @_QQclX2861383129, i64 5, ptr null, i32 7, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1632)\l  %25 = load i32, ptr %11, align 4\l  %26 = sext i32 %25 to i64\l  %27 = sub nsw i64 %26, 1\l  %28 = mul nsw i64 %27, 1\l  %29 = mul nsw i64 %28, 1\l  %30 = add nsw i64 %29, 0\l  %31 = getelementptr [81 x i8], ptr @_QFFread_raw_dataEraw_data, i64 %30\l  %32 = call i1 @_FortranAioInputAscii(ptr %24, ptr %31, i64 81)\l  %33 = call i32 @_FortranAioEndIoStatement(ptr %24)\l  %34 = load i32, ptr %11, align 4\l  %35 = add i32 %34, 1\l  %36 = sub i64 %21, 1\l  br label %19\l}"];
	Node0x55bb5fea3900 -> Node0x55bb5fea3840[tooltip="23 -> 19\nProbability 100.00%" ];
	Node0x55bb5fea3b00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{37:\l|  store i32 %20, ptr %11, align 4\l  %38 = call ptr @_FortranAioBeginClose(i32 7, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1634)\l  %39 = call i32 @_FortranAioEndIoStatement(ptr %38)\l  br label %40\l}"];
	Node0x55bb5fea3b00 -> Node0x55bb5fea1600[tooltip="37 -> 40\nProbability 100.00%" ];
	Node0x55bb5fea1600 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{40:\l|  %41 = load i32, ptr %1, align 4\l  %42 = icmp sle i32 1, %41\l  br i1 %42, label %43, label %45\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea1600:s0 -> Node0x55bb5fea4dd0[tooltip="40 -> 43\nProbability 50.00%" ];
	Node0x55bb5fea1600:s1 -> Node0x55bb5fea4e20[tooltip="40 -> 45\nProbability 50.00%" ];
	Node0x55bb5fea4dd0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{43:\l|  %44 = icmp sle i32 %41, 27\l  br i1 %44, label %47, label %45\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea4dd0:s0 -> Node0x55bb5fea4fb0[tooltip="43 -> 47\nProbability 50.00%" ];
	Node0x55bb5fea4dd0:s1 -> Node0x55bb5fea4e20[tooltip="43 -> 45\nProbability 50.00%" ];
	Node0x55bb5fea4e20 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{45:\l|  %46 = icmp sle i32 28, %41\l  br i1 %46, label %93, label %95\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea4e20:s0 -> Node0x55bb5fea5140[tooltip="45 -> 93\nProbability 100.00%" ];
	Node0x55bb5fea4e20:s1 -> Node0x55bb5fea5190[tooltip="45 -> 95\nProbability 0.00%" ];
	Node0x55bb5fea4fb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{47:\l|  %48 = load i32, ptr %1, align 4\l  %49 = sext i32 %48 to i64\l  %50 = sub nsw i64 %49, 1\l  %51 = mul nsw i64 %50, 1\l  %52 = mul nsw i64 %51, 1\l  %53 = add nsw i64 %52, 0\l  %54 = getelementptr [81 x i8], ptr @_QFFread_raw_dataEraw_data, i64 %53\l  %55 = call ptr @_FortranAioBeginInternalFormattedInput(ptr %54, i64 81, ptr\l... @_QQclX283831693129, i64 6, ptr null, ptr null, i64 0, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1640)\l  %56 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} \{ ptr\l... undef, i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), i32\l... 20180515, i8 2, i8 9, i8 0, i8 0, [2 x [3 x i64]] [[3 x i64] [i64 1, i64 9,\l... i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64)], [3 x i64]\l... [i64 1, i64 9, i64 mul (i64 ptrtoint (ptr getelementptr (i32, ptr null, i32\l... 1) to i64), i64 9)]] \}, ptr %0, 0\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %56, ptr %8, align 8\l  %57 = call i1 @_FortranAioInputDescriptor(ptr %55, ptr %8)\l  %58 = call i32 @_FortranAioEndIoStatement(ptr %55)\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} \{ ptr null, i64\l... ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), i32 20180515, i8\l... 2, i8 9, i8 2, i8 0, [2 x [3 x i64]] [[3 x i64] [i64 1, i64 0, i64 ptrtoint\l... (ptr getelementptr (i32, ptr null, i32 1) to i64)], [3 x i64] [i64 1, i64 0,\l... i64 0]] \}, ptr %7, align 8\l  %59 = load \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr %7, align\l... 8\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %59, ptr %10, align\l... 8\l  %60 = call \{\} @_FortranATranspose(ptr %10, ptr %8, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1641)\l  %61 = load \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr %10,\l... align 8\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %61, ptr %6, align 8\l  %62 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 0, i32 0\l  %63 = load i64, ptr %62, align 8\l  %64 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 0, i32 1\l  %65 = load i64, ptr %64, align 8\l  %66 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 0, i32 2\l  %67 = load i64, ptr %66, align 8\l  %68 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 1, i32 0\l  %69 = load i64, ptr %68, align 8\l  %70 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 1, i32 1\l  %71 = load i64, ptr %70, align 8\l  %72 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 7, i64 1, i32 2\l  %73 = load i64, ptr %72, align 8\l  %74 = getelementptr \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr\l... %6, i32 0, i32 0\l  %75 = load ptr, ptr %74, align 8\l  %76 = icmp eq i64 %65, 0\l  %77 = select i1 %76, i64 1, i64 %63\l  %78 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} \{ ptr\l... undef, i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), i32\l... 20180515, i8 2, i8 9, i8 0, i8 0, [2 x [3 x i64]] undef \}, i64 %77, 7, 0, 0\l  %79 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %78,\l... i64 %65, 7, 0, 1\l  %80 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %79,\l... i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), 7, 0, 2\l  %81 = mul i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), %65\l  %82 = mul i64 1, %65\l  %83 = icmp eq i64 %71, 0\l  %84 = select i1 %83, i64 1, i64 %69\l  %85 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %80,\l... i64 %84, 7, 1, 0\l  %86 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %85,\l... i64 %71, 7, 1, 1\l  %87 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %86,\l... i64 %81, 7, 1, 2\l  %88 = mul i64 %81, %71\l  %89 = mul i64 %82, %71\l  %90 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %87,\l... ptr %75, 0\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %90, ptr %5, align 8\l  %91 = load \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \}, ptr %8, align\l... 8\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %91, ptr %9, align 8\l  %92 = call \{\} @_FortranAAssign(ptr %9, ptr %5, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1641)\l  call void @free(ptr %75)\l  br label %114\l}"];
	Node0x55bb5fea4fb0 -> Node0x55bb5feb6400[tooltip="47 -> 114\nProbability 100.00%" ];
	Node0x55bb5fea5140 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{93:\l|  %94 = icmp sle i32 %41, 54\l  br i1 %94, label %96, label %95\l|{<s0>T|<s1>F}}"];
	Node0x55bb5fea5140:s0 -> Node0x55bb5feb6550[tooltip="93 -> 96\nProbability 100.00%" ];
	Node0x55bb5fea5140:s1 -> Node0x55bb5fea5190[tooltip="93 -> 95\nProbability 0.00%" ];
	Node0x55bb5fea5190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70" fontname="Courier",label="{95:\l|  br label %109\l}"];
	Node0x55bb5fea5190 -> Node0x55bb5feb3b70[tooltip="95 -> 109\nProbability 100.00%" ];
	Node0x55bb5feb6550 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d24b4070" fontname="Courier",label="{96:\l|  %97 = load i32, ptr %1, align 4\l  %98 = sub i32 %97, 27\l  %99 = sext i32 %98 to i64\l  %100 = sub nsw i64 %99, 1\l  %101 = mul nsw i64 %100, 1\l  %102 = mul nsw i64 %101, 1\l  %103 = add nsw i64 %102, 0\l  %104 = getelementptr [81 x i8], ptr @_QFFread_raw_dataEraw_data, i64 %103\l  %105 = call ptr @_FortranAioBeginInternalFormattedInput(ptr %104, i64 81,\l... ptr @_QQclX283831693129, i64 6, ptr null, ptr null, i64 0, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1643)\l  %106 = insertvalue \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} \{ ptr\l... undef, i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64), i32\l... 20180515, i8 2, i8 9, i8 0, i8 0, [2 x [3 x i64]] [[3 x i64] [i64 1, i64 9,\l... i64 ptrtoint (ptr getelementptr (i32, ptr null, i32 1) to i64)], [3 x i64]\l... [i64 1, i64 9, i64 mul (i64 ptrtoint (ptr getelementptr (i32, ptr null, i32\l... 1) to i64), i64 9)]] \}, ptr %0, 0\l  store \{ ptr, i64, i32, i8, i8, i8, i8, [2 x [3 x i64]] \} %106, ptr %4, align\l... 8\l  %107 = call i1 @_FortranAioInputDescriptor(ptr %105, ptr %4)\l  %108 = call i32 @_FortranAioEndIoStatement(ptr %105)\l  br label %114\l}"];
	Node0x55bb5feb6550 -> Node0x55bb5feb6400[tooltip="96 -> 114\nProbability 100.00%" ];
	Node0x55bb5feb3b70 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b5cdfa70" fontname="Courier",label="{109:\l|  %110 = call ptr @_FortranAioBeginExternalListOutput(i32 6, ptr\l... @_QQclXf509f8d48db1b89486c6e4f1d51e632e, i32 1645)\l  %111 = call i1 @_FortranAioOutputAscii(ptr %110, ptr\l... @_QQclX0422c9d21cbcc79b9d7d05cc71b8de89, i64 41)\l  %112 = call i32 @_FortranAioEndIoStatement(ptr %110)\l  %113 = call \{\} @_FortranAStopStatement(i32 0, i1 false, i1 false)\l  unreachable\l}"];
	Node0x55bb5feb6400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{114:\l|  ret void\l}"];
}
