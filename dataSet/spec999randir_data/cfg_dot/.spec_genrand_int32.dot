digraph "CFG for 'spec_genrand_int32' function" {
	label="CFG for 'spec_genrand_int32' function";

	Node0x5614a63d8340 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{entry:\l|  %y = alloca i64, align 8\l  %kk = alloca i32, align 4\l  %0 = load i32, ptr @mti, align 4\l  %cmp = icmp sge i32 %0, 624\l  br i1 %cmp, label %if.then, label %if.end47\l|{<s0>T|<s1>F}}"];
	Node0x5614a63d8340:s0 -> Node0x5614a63d8660[tooltip="entry -> if.then\nProbability 50.00%" ];
	Node0x5614a63d8340:s1 -> Node0x5614a63d86d0[tooltip="entry -> if.end47\nProbability 50.00%" ];
	Node0x5614a63d8660 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.then:\l|  %1 = load i32, ptr @mti, align 4\l  %cmp1 = icmp eq i32 %1, 625\l  br i1 %cmp1, label %if.then2, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5614a63d8660:s0 -> Node0x5614a63d9110[tooltip="if.then -> if.then2\nProbability 50.00%" ];
	Node0x5614a63d8660:s1 -> Node0x5614a63d9190[tooltip="if.then -> if.end\nProbability 50.00%" ];
	Node0x5614a63d9110 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{if.then2:\l|  call void @spec_init_genrand(i64 noundef 5489)\l  br label %if.end\l}"];
	Node0x5614a63d9110 -> Node0x5614a63d9190[tooltip="if.then2 -> if.end\nProbability 100.00%" ];
	Node0x5614a63d9190 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{if.end:\l|  store i32 0, ptr %kk, align 4\l  br label %for.cond\l}"];
	Node0x5614a63d9190 -> Node0x5614a63d95c0[tooltip="if.end -> for.cond\nProbability 100.00%" ];
	Node0x5614a63d95c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %2 = load i32, ptr %kk, align 4\l  %cmp3 = icmp slt i32 %2, 227\l  br i1 %cmp3, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5614a63d95c0:s0 -> Node0x5614a63d97c0[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5614a63d95c0:s1 -> Node0x5614a63d9840[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5614a63d97c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load i32, ptr %kk, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64 %idxprom\l  %4 = load i64, ptr %arrayidx, align 8\l  %and = and i64 %4, 2147483648\l  %5 = load i32, ptr %kk, align 4\l  %add = add nsw i32 %5, 1\l  %idxprom4 = sext i32 %add to i64\l  %arrayidx5 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom4\l  %6 = load i64, ptr %arrayidx5, align 8\l  %and6 = and i64 %6, 2147483647\l  %or = or i64 %and, %and6\l  store i64 %or, ptr %y, align 8\l  %7 = load i32, ptr %kk, align 4\l  %add7 = add nsw i32 %7, 397\l  %idxprom8 = sext i32 %add7 to i64\l  %arrayidx9 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom8\l  %8 = load i64, ptr %arrayidx9, align 8\l  %9 = load i64, ptr %y, align 8\l  %shr = lshr i64 %9, 1\l  %xor = xor i64 %8, %shr\l  %10 = load i64, ptr %y, align 8\l  %and10 = and i64 %10, 1\l  %arrayidx11 = getelementptr inbounds [2 x i64], ptr\l... @spec_genrand_int32.mag01, i64 0, i64 %and10\l  %11 = load i64, ptr %arrayidx11, align 8\l  %xor12 = xor i64 %xor, %11\l  %12 = load i32, ptr %kk, align 4\l  %idxprom13 = sext i32 %12 to i64\l  %arrayidx14 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom13\l  store i64 %xor12, ptr %arrayidx14, align 8\l  br label %for.inc\l}"];
	Node0x5614a63d97c0 -> Node0x5614a63db270[tooltip="for.body -> for.inc\nProbability 100.00%" ];
	Node0x5614a63db270 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %13 = load i32, ptr %kk, align 4\l  %inc = add nsw i32 %13, 1\l  store i32 %inc, ptr %kk, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5614a63db270 -> Node0x5614a63d95c0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5614a63d9840 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  br label %for.cond15\l}"];
	Node0x5614a63d9840 -> Node0x5614a63db6e0[tooltip="for.end -> for.cond15\nProbability 100.00%" ];
	Node0x5614a63db6e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond15:\l|  %14 = load i32, ptr %kk, align 4\l  %cmp16 = icmp slt i32 %14, 623\l  br i1 %cmp16, label %for.body17, label %for.end38\l|{<s0>T|<s1>F}}"];
	Node0x5614a63db6e0:s0 -> Node0x5614a63db930[tooltip="for.cond15 -> for.body17\nProbability 96.88%" ];
	Node0x5614a63db6e0:s1 -> Node0x5614a63db9b0[tooltip="for.cond15 -> for.end38\nProbability 3.12%" ];
	Node0x5614a63db930 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body17:\l|  %15 = load i32, ptr %kk, align 4\l  %idxprom18 = sext i32 %15 to i64\l  %arrayidx19 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom18\l  %16 = load i64, ptr %arrayidx19, align 8\l  %and20 = and i64 %16, 2147483648\l  %17 = load i32, ptr %kk, align 4\l  %add21 = add nsw i32 %17, 1\l  %idxprom22 = sext i32 %add21 to i64\l  %arrayidx23 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom22\l  %18 = load i64, ptr %arrayidx23, align 8\l  %and24 = and i64 %18, 2147483647\l  %or25 = or i64 %and20, %and24\l  store i64 %or25, ptr %y, align 8\l  %19 = load i32, ptr %kk, align 4\l  %add26 = add nsw i32 %19, -227\l  %idxprom27 = sext i32 %add26 to i64\l  %arrayidx28 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom27\l  %20 = load i64, ptr %arrayidx28, align 8\l  %21 = load i64, ptr %y, align 8\l  %shr29 = lshr i64 %21, 1\l  %xor30 = xor i64 %20, %shr29\l  %22 = load i64, ptr %y, align 8\l  %and31 = and i64 %22, 1\l  %arrayidx32 = getelementptr inbounds [2 x i64], ptr\l... @spec_genrand_int32.mag01, i64 0, i64 %and31\l  %23 = load i64, ptr %arrayidx32, align 8\l  %xor33 = xor i64 %xor30, %23\l  %24 = load i32, ptr %kk, align 4\l  %idxprom34 = sext i32 %24 to i64\l  %arrayidx35 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom34\l  store i64 %xor33, ptr %arrayidx35, align 8\l  br label %for.inc36\l}"];
	Node0x5614a63db930 -> Node0x5614a63d89a0[tooltip="for.body17 -> for.inc36\nProbability 100.00%" ];
	Node0x5614a63d89a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc36:\l|  %25 = load i32, ptr %kk, align 4\l  %inc37 = add nsw i32 %25, 1\l  store i32 %inc37, ptr %kk, align 4\l  br label %for.cond15, !llvm.loop !8\l}"];
	Node0x5614a63d89a0 -> Node0x5614a63db6e0[tooltip="for.inc36 -> for.cond15\nProbability 100.00%" ];
	Node0x5614a63db9b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end38:\l|  %26 = load i64, ptr getelementptr inbounds ([624 x i64], ptr @mt, i64 0,\l... i64 623), align 8\l  %and39 = and i64 %26, 2147483648\l  %27 = load i64, ptr @mt, align 16\l  %and40 = and i64 %27, 2147483647\l  %or41 = or i64 %and39, %and40\l  store i64 %or41, ptr %y, align 8\l  %28 = load i64, ptr getelementptr inbounds ([624 x i64], ptr @mt, i64 0, i64\l... 396), align 16\l  %29 = load i64, ptr %y, align 8\l  %shr42 = lshr i64 %29, 1\l  %xor43 = xor i64 %28, %shr42\l  %30 = load i64, ptr %y, align 8\l  %and44 = and i64 %30, 1\l  %arrayidx45 = getelementptr inbounds [2 x i64], ptr\l... @spec_genrand_int32.mag01, i64 0, i64 %and44\l  %31 = load i64, ptr %arrayidx45, align 8\l  %xor46 = xor i64 %xor43, %31\l  store i64 %xor46, ptr getelementptr inbounds ([624 x i64], ptr @mt, i64 0,\l... i64 623), align 8\l  store i32 0, ptr @mti, align 4\l  br label %if.end47\l}"];
	Node0x5614a63db9b0 -> Node0x5614a63d86d0[tooltip="for.end38 -> if.end47\nProbability 100.00%" ];
	Node0x5614a63d86d0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d0473d70" fontname="Courier",label="{if.end47:\l|  %32 = load i32, ptr @mti, align 4\l  %inc48 = add nsw i32 %32, 1\l  store i32 %inc48, ptr @mti, align 4\l  %idxprom49 = sext i32 %32 to i64\l  %arrayidx50 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom49\l  %33 = load i64, ptr %arrayidx50, align 8\l  store i64 %33, ptr %y, align 8\l  %34 = load i64, ptr %y, align 8\l  %shr51 = lshr i64 %34, 11\l  %35 = load i64, ptr %y, align 8\l  %xor52 = xor i64 %35, %shr51\l  store i64 %xor52, ptr %y, align 8\l  %36 = load i64, ptr %y, align 8\l  %shl = shl i64 %36, 7\l  %and53 = and i64 %shl, 2636928640\l  %37 = load i64, ptr %y, align 8\l  %xor54 = xor i64 %37, %and53\l  store i64 %xor54, ptr %y, align 8\l  %38 = load i64, ptr %y, align 8\l  %shl55 = shl i64 %38, 15\l  %and56 = and i64 %shl55, 4022730752\l  %39 = load i64, ptr %y, align 8\l  %xor57 = xor i64 %39, %and56\l  store i64 %xor57, ptr %y, align 8\l  %40 = load i64, ptr %y, align 8\l  %shr58 = lshr i64 %40, 18\l  %41 = load i64, ptr %y, align 8\l  %xor59 = xor i64 %41, %shr58\l  store i64 %xor59, ptr %y, align 8\l  %42 = load i64, ptr %y, align 8\l  ret i64 %42\l}"];
}
