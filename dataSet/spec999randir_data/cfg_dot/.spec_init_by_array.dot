digraph "CFG for 'spec_init_by_array' function" {
	label="CFG for 'spec_init_by_array' function";

	Node0x5614a63e0bb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{entry:\l|  %init_key.addr = alloca ptr, align 8\l  %key_length.addr = alloca i32, align 4\l  %i = alloca i32, align 4\l  %j = alloca i32, align 4\l  %k = alloca i32, align 4\l  store ptr %init_key, ptr %init_key.addr, align 8\l  store i32 %key_length, ptr %key_length.addr, align 4\l  call void @spec_init_genrand(i64 noundef 19650218)\l  store i32 1, ptr %i, align 4\l  store i32 0, ptr %j, align 4\l  %0 = load i32, ptr %key_length.addr, align 4\l  %cmp = icmp sgt i32 624, %0\l  br i1 %cmp, label %cond.true, label %cond.false\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e0bb0:s0 -> Node0x5614a63e1420[tooltip="entry -> cond.true\nProbability 50.00%" ];
	Node0x5614a63e0bb0:s1 -> Node0x5614a63e1470[tooltip="entry -> cond.false\nProbability 50.00%" ];
	Node0x5614a63e1420 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{cond.true:\l|  br label %cond.end\l}"];
	Node0x5614a63e1420 -> Node0x5614a63e1570[tooltip="cond.true -> cond.end\nProbability 100.00%" ];
	Node0x5614a63e1470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#dc5d4a70" fontname="Courier",label="{cond.false:\l|  %1 = load i32, ptr %key_length.addr, align 4\l  br label %cond.end\l}"];
	Node0x5614a63e1470 -> Node0x5614a63e1570[tooltip="cond.false -> cond.end\nProbability 100.00%" ];
	Node0x5614a63e1570 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{cond.end:\l|  %cond = phi i32 [ 624, %cond.true ], [ %1, %cond.false ]\l  store i32 %cond, ptr %k, align 4\l  br label %for.cond\l}"];
	Node0x5614a63e1570 -> Node0x5614a63e19e0[tooltip="cond.end -> for.cond\nProbability 100.00%" ];
	Node0x5614a63e19e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond:\l|  %2 = load i32, ptr %k, align 4\l  %tobool = icmp ne i32 %2, 0\l  br i1 %tobool, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e19e0:s0 -> Node0x5614a63e1c30[tooltip="for.cond -> for.body\nProbability 96.88%" ];
	Node0x5614a63e19e0:s1 -> Node0x5614a63e1cb0[tooltip="for.cond -> for.end\nProbability 3.12%" ];
	Node0x5614a63e1c30 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body:\l|  %3 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64 %idxprom\l  %4 = load i64, ptr %arrayidx, align 8\l  %5 = load i32, ptr %i, align 4\l  %sub = sub nsw i32 %5, 1\l  %idxprom1 = sext i32 %sub to i64\l  %arrayidx2 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom1\l  %6 = load i64, ptr %arrayidx2, align 8\l  %7 = load i32, ptr %i, align 4\l  %sub3 = sub nsw i32 %7, 1\l  %idxprom4 = sext i32 %sub3 to i64\l  %arrayidx5 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom4\l  %8 = load i64, ptr %arrayidx5, align 8\l  %shr = lshr i64 %8, 30\l  %xor = xor i64 %6, %shr\l  %mul = mul i64 %xor, 1664525\l  %xor6 = xor i64 %4, %mul\l  %9 = load ptr, ptr %init_key.addr, align 8\l  %10 = load i32, ptr %j, align 4\l  %idxprom7 = sext i32 %10 to i64\l  %arrayidx8 = getelementptr inbounds i64, ptr %9, i64 %idxprom7\l  %11 = load i64, ptr %arrayidx8, align 8\l  %add = add i64 %xor6, %11\l  %12 = load i32, ptr %j, align 4\l  %conv = sext i32 %12 to i64\l  %add9 = add i64 %add, %conv\l  %13 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %13 to i64\l  %arrayidx11 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom10\l  store i64 %add9, ptr %arrayidx11, align 8\l  %14 = load i32, ptr %i, align 4\l  %idxprom12 = sext i32 %14 to i64\l  %arrayidx13 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom12\l  %15 = load i64, ptr %arrayidx13, align 8\l  %and = and i64 %15, 4294967295\l  store i64 %and, ptr %arrayidx13, align 8\l  %16 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %16, 1\l  store i32 %inc, ptr %i, align 4\l  %17 = load i32, ptr %j, align 4\l  %inc14 = add nsw i32 %17, 1\l  store i32 %inc14, ptr %j, align 4\l  %18 = load i32, ptr %i, align 4\l  %cmp15 = icmp sge i32 %18, 624\l  br i1 %cmp15, label %if.then, label %if.end\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e1c30:s0 -> Node0x5614a63e3e00[tooltip="for.body -> if.then\nProbability 50.00%" ];
	Node0x5614a63e1c30:s1 -> Node0x5614a63e3e70[tooltip="for.body -> if.end\nProbability 50.00%" ];
	Node0x5614a63e3e00 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then:\l|  %19 = load i64, ptr getelementptr inbounds ([624 x i64], ptr @mt, i64 0,\l... i64 623), align 8\l  store i64 %19, ptr @mt, align 16\l  store i32 1, ptr %i, align 4\l  br label %if.end\l}"];
	Node0x5614a63e3e00 -> Node0x5614a63e3e70[tooltip="if.then -> if.end\nProbability 100.00%" ];
	Node0x5614a63e3e70 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end:\l|  %20 = load i32, ptr %j, align 4\l  %21 = load i32, ptr %key_length.addr, align 4\l  %cmp17 = icmp sge i32 %20, %21\l  br i1 %cmp17, label %if.then19, label %if.end20\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e3e70:s0 -> Node0x5614a63e4400[tooltip="if.end -> if.then19\nProbability 50.00%" ];
	Node0x5614a63e3e70:s1 -> Node0x5614a63e4450[tooltip="if.end -> if.end20\nProbability 50.00%" ];
	Node0x5614a63e4400 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then19:\l|  store i32 0, ptr %j, align 4\l  br label %if.end20\l}"];
	Node0x5614a63e4400 -> Node0x5614a63e4450[tooltip="if.then19 -> if.end20\nProbability 100.00%" ];
	Node0x5614a63e4450 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end20:\l|  br label %for.inc\l}"];
	Node0x5614a63e4450 -> Node0x5614a63e4690[tooltip="if.end20 -> for.inc\nProbability 100.00%" ];
	Node0x5614a63e4690 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc:\l|  %22 = load i32, ptr %k, align 4\l  %dec = add nsw i32 %22, -1\l  store i32 %dec, ptr %k, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x5614a63e4690 -> Node0x5614a63e19e0[tooltip="for.inc -> for.cond\nProbability 100.00%" ];
	Node0x5614a63e1cb0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end:\l|  store i32 623, ptr %k, align 4\l  br label %for.cond21\l}"];
	Node0x5614a63e1cb0 -> Node0x5614a63e51f0[tooltip="for.end -> for.cond21\nProbability 100.00%" ];
	Node0x5614a63e51f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.cond21:\l|  %23 = load i32, ptr %k, align 4\l  %tobool22 = icmp ne i32 %23, 0\l  br i1 %tobool22, label %for.body23, label %for.end50\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e51f0:s0 -> Node0x5614a63e5420[tooltip="for.cond21 -> for.body23\nProbability 96.88%" ];
	Node0x5614a63e51f0:s1 -> Node0x5614a63e54a0[tooltip="for.cond21 -> for.end50\nProbability 3.12%" ];
	Node0x5614a63e5420 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.body23:\l|  %24 = load i32, ptr %i, align 4\l  %idxprom24 = sext i32 %24 to i64\l  %arrayidx25 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom24\l  %25 = load i64, ptr %arrayidx25, align 8\l  %26 = load i32, ptr %i, align 4\l  %sub26 = sub nsw i32 %26, 1\l  %idxprom27 = sext i32 %sub26 to i64\l  %arrayidx28 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom27\l  %27 = load i64, ptr %arrayidx28, align 8\l  %28 = load i32, ptr %i, align 4\l  %sub29 = sub nsw i32 %28, 1\l  %idxprom30 = sext i32 %sub29 to i64\l  %arrayidx31 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom30\l  %29 = load i64, ptr %arrayidx31, align 8\l  %shr32 = lshr i64 %29, 30\l  %xor33 = xor i64 %27, %shr32\l  %mul34 = mul i64 %xor33, 1566083941\l  %xor35 = xor i64 %25, %mul34\l  %30 = load i32, ptr %i, align 4\l  %conv36 = sext i32 %30 to i64\l  %sub37 = sub i64 %xor35, %conv36\l  %31 = load i32, ptr %i, align 4\l  %idxprom38 = sext i32 %31 to i64\l  %arrayidx39 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom38\l  store i64 %sub37, ptr %arrayidx39, align 8\l  %32 = load i32, ptr %i, align 4\l  %idxprom40 = sext i32 %32 to i64\l  %arrayidx41 = getelementptr inbounds [624 x i64], ptr @mt, i64 0, i64\l... %idxprom40\l  %33 = load i64, ptr %arrayidx41, align 8\l  %and42 = and i64 %33, 4294967295\l  store i64 %and42, ptr %arrayidx41, align 8\l  %34 = load i32, ptr %i, align 4\l  %inc43 = add nsw i32 %34, 1\l  store i32 %inc43, ptr %i, align 4\l  %35 = load i32, ptr %i, align 4\l  %cmp44 = icmp sge i32 %35, 624\l  br i1 %cmp44, label %if.then46, label %if.end47\l|{<s0>T|<s1>F}}"];
	Node0x5614a63e5420:s0 -> Node0x5614a63ddca0[tooltip="for.body23 -> if.then46\nProbability 50.00%" ];
	Node0x5614a63e5420:s1 -> Node0x5614a63ddd20[tooltip="for.body23 -> if.end47\nProbability 50.00%" ];
	Node0x5614a63ddca0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#be242e70" fontname="Courier",label="{if.then46:\l|  %36 = load i64, ptr getelementptr inbounds ([624 x i64], ptr @mt, i64 0,\l... i64 623), align 8\l  store i64 %36, ptr @mt, align 16\l  store i32 1, ptr %i, align 4\l  br label %if.end47\l}"];
	Node0x5614a63ddca0 -> Node0x5614a63ddd20[tooltip="if.then46 -> if.end47\nProbability 100.00%" ];
	Node0x5614a63ddd20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{if.end47:\l|  br label %for.inc48\l}"];
	Node0x5614a63ddd20 -> Node0x5614a63de0a0[tooltip="if.end47 -> for.inc48\nProbability 100.00%" ];
	Node0x5614a63de0a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870" fontname="Courier",label="{for.inc48:\l|  %37 = load i32, ptr %k, align 4\l  %dec49 = add nsw i32 %37, -1\l  store i32 %dec49, ptr %k, align 4\l  br label %for.cond21, !llvm.loop !8\l}"];
	Node0x5614a63de0a0 -> Node0x5614a63e51f0[tooltip="for.inc48 -> for.cond21\nProbability 100.00%" ];
	Node0x5614a63e54a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#d6524470" fontname="Courier",label="{for.end50:\l|  store i64 2147483648, ptr @mt, align 16\l  ret void\l}"];
}
